import re
import requests
from aiogram import Bot, Dispatcher, F
from aiogram.filters import Command
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton

API_TOKEN = '–¢–í–û–ô_–ë–û–¢_–¢–û–ö–ï–ù'  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ç–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞

bot = Bot(token=API_TOKEN)
dp = Dispatcher()

def extract_article(text: str) -> str | None:
    # –†–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∞—Ä—Ç–∏–∫—É–ª–∞ –∏–∑ —Å—Å—ã–ª–æ–∫ –∏ —Ç–µ–∫—Å—Ç–∞
    patterns = [
        r'/(\d+)/detail\.aspx',  # –°—Å—ã–ª–∫–∏ –≤–∏–¥–∞ /catalog/1234567/detail.aspx
        r'nm=(\d+)',             # –ü–∞—Ä–∞–º–µ—Ç—Ä nm –≤ URL
        r'(\d{6,12})'            # –ü—Ä—è–º–æ–π –∞—Ä—Ç–∏–∫—É–ª (6-12 —Ü–∏—Ñ—Ä)
    ]
    
    for pattern in patterns:
        match = re.search(pattern, text)
        if match:
            article = match.group(1)
            if article.isdigit() and 6 <= len(article) <= 12:
                return article
    return None

def get_wb_product(article: str) -> dict | None:
    url = f"https://card.wb.ru/cards/v1/detail?appType=1&curr=rub&dest=-1257786&spp=0&nm={article}"
    try:
        response = requests.get(url).json()
        product = response['data']['products'][0]
        return {
            'name': product['name'],
            'brand': product['brand'],
            'price': product['priceU'] // 100,
            'sale_price': product['salePriceU'] // 100,
            'discount': product['sale'],
            'rating': product.get('rating', 0),
            'reviews': product.get('feedbacks', 0),
            'colors': [color['name'] for color in product['colors']],
            'sizes': [
                {
                    'name': size['name'],
                    'available': sum(stock['qty'] for stock in size.get('stocks', []))
                } 
                for size in product.get('sizes', []) if size.get('stocks')
            ],
            'delivery': f"{product.get('time1', 0)}-{product.get('time2', 0)} –¥–Ω–µ–π"
        }
    except Exception:
        return None

@dp.message(Command("start"))
async def cmd_start(message: Message):
    await message.answer("üîç <b>Wildberries Price Bot</b>\n\n"
                        "–û—Ç–ø—Ä–∞–≤—å –∞—Ä—Ç–∏–∫—É–ª (6-12 —Ü–∏—Ñ—Ä) –∏–ª–∏ —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–æ–≤–∞—Ä:",
                        parse_mode="HTML")

@dp.message()
async def process_input(message: Message):
    article = extract_article(message.text.strip())
    
    if not article:
        await message.answer("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç\n"
                            "–û—Ç–ø—Ä–∞–≤—å –∞—Ä—Ç–∏–∫—É–ª (6-12 —Ü–∏—Ñ—Ä) –∏–ª–∏ —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–æ–≤–∞—Ä")
        return
    
    product = get_wb_product(article)
    
    if not product:
        await message.answer(f"‚ùå –¢–æ–≤–∞—Ä —Å –∞—Ä—Ç–∏–∫—É–ª–æ–º <b>{article}</b> –Ω–µ –Ω–∞–π–¥–µ–Ω\n"
                            "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö",
                            parse_mode="HTML")
        return

    # –°–æ–∑–¥–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–æ–≤–∞—Ä
    product_link = f"https://www.wildberries.ru/catalog/{article}/detail.aspx"
    
    colors = "\n".join([f"‚ñ´Ô∏è {color}" for color in product['colors']])
    sizes = "\n".join([
        f"‚ñ´Ô∏è {size['name']} (–≤ –Ω–∞–ª–∏—á–∏–∏: {size['available']})"
        for size in product['sizes'] if size['available'] > 0
    ]) or "–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ä–∞–∑–º–µ—Ä–æ–≤"

    message_text = (
        f"üõç <b>{product['name']}</b>\n\n"
        f"üîñ –ë—Ä–µ–Ω–¥: {product['brand']}\n"
        f"üí∞ –¶–µ–Ω–∞: <s>{product['price']} ‚ÇΩ</s> ‚Üí <b>{product['sale_price']} ‚ÇΩ</b>\n"
        f"üî• –°–∫–∏–¥–∫–∞: {product['discount']}%\n"
        f"‚≠ê –†–µ–π—Ç–∏–Ω–≥: {product['rating']}/5 (–æ—Ç–∑—ã–≤–æ–≤: {product['reviews']})\n\n"
        f"üé® –¶–≤–µ—Ç–∞:\n{colors}\n\n"
        f"üìè –†–∞–∑–º–µ—Ä—ã:\n{sizes}\n\n"
        f"üöö –î–æ—Å—Ç–∞–≤–∫–∞: {product['delivery']}\n\n"
        f"üåê <a href='{product_link}'>–ü–µ—Ä–µ–π—Ç–∏ –∫ —Ç–æ–≤–∞—Ä—É</a>"
    )

    await message.answer(
        message_text,
        parse_mode="HTML",
        disable_web_page_preview=True
    )

if __name__ == '__main__':
    dp.run_polling(bot)